package com.app.model;
// Generated 04.05.2017 21:58:56 by Hibernate Tools 5.1.0.Alpha1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;

import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import org.springframework.format.annotation.DateTimeFormat;

/**
 * Task generated by hbm2java
 */
@Entity
@Table(name = "task", catalog = "testing_simulator_db")
public class Task implements java.io.Serializable {

	private Integer id;
	private String taskType;
	private String bugType;
	private Date creationDate;
	private String shortDescription;
	private String description;
	private String fileLink;

	private String tags;
	private Answer answer;
	private Set<Userhistory> userhistories = new HashSet(0);

	public Task() {
	}

	public Task(String taskType, String bugType, String shortDescription) {
		this.taskType = taskType;
		this.bugType = bugType;
		this.shortDescription = shortDescription;
	}

	public Task(String taskType, String bugType, Date creationDate, String shortDescription, String description,
			String fileLink, String tags, Answer answer, Set<Userhistory> userhistories) {
		this.taskType = taskType;
		this.bugType = bugType;
		this.creationDate = creationDate;
		this.shortDescription = shortDescription;
		this.description = description;
		this.fileLink = fileLink;
		this.tags = tags;
		this.answer = answer;
		this.userhistories = userhistories;
	}

	@Id
	@GeneratedValue(strategy = GenerationType.AUTO)
	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@Column(name = "task_type", nullable = false, length = 50)
	public String getTaskType() {
		return this.taskType;
	}

	public void setTaskType(String taskType) {
		this.taskType = taskType;
	}

	@Column(name = "bug_type", nullable = false, length = 50)
	public String getBugType() {
		return this.bugType;
	}

	public void setBugType(String bugType) {
		this.bugType = bugType;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "creation_date", length = 10)
	@DateTimeFormat(pattern = "yyyy-MM-dd")
	public Date getCreationDate() {
		return creationDate;
	}

	public void setCreationDate(Date creationDate) {
		this.creationDate = creationDate;
	}

	@Column(name = "short_description", nullable = false, length = 200)
	public String getShortDescription() {
		return this.shortDescription;
	}

	public void setShortDescription(String shortDescription) {
		this.shortDescription = shortDescription;
	}

	@Column(name = "description", length = 65535)
	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}
	
	@Column(name = "file_link", length = 200)
	public String getFileLink() {
		return fileLink;
	}

	public void setFileLink(String fileLink) {
		this.fileLink = fileLink;
	}

	@Column(name = "tags", length = 65535)
	public String getTags() {
		return this.tags;
	}

	public void setTags(String tags) {
		this.tags = tags;
	}

	@OneToOne(cascade = CascadeType.ALL)
	@JoinColumn(name = "answer_id")
	public Answer getAnswer() {
		return this.answer;
	}

	public void setAnswer(Answer answer) {
		this.answer = answer;
	}

	@OneToMany(fetch = FetchType.EAGER, mappedBy = "task", cascade = CascadeType.ALL)
	public Set<Userhistory> getUserhistories() {
		return this.userhistories;
	}

	public void setUserhistories(Set<Userhistory> userhistories) {
		this.userhistories = userhistories;
	}

}
